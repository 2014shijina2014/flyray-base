package me.flyray.merchant.controller.crm;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import me.flyray.crm.api.CustomerBaseService;
import me.flyray.crm.model.CustomerBase;
import me.flyray.merchant.controller.AbstractController;
import me.flyray.merchant.utils.PageUtils;
import me.flyray.merchant.utils.R;

/** 
* @author: bolei
* @date：2017年3月12日 下午4:42:49 
* @description：客户管理
*/

@RestController
@RequestMapping("/crm/customer")
@Controller
public class CustomerController extends AbstractController{

	@Autowired
	private CustomerBaseService customerBaseService;
	
	
	/**
	 * 客户列表
	 */
	@RequestMapping("/list")
	@RequiresPermissions("crm:customer:list")
	public R list(String customerNo, Integer page, Integer limit){
		Map<String, Object> map = new HashMap<>();
		map.put("customerNo", customerNo);
		map.put("offset", (page - 1) * limit);
		map.put("limit", limit);
		
		//查询列表数据
		List<CustomerBase> list = customerBaseService.queryList(map);
		int total = customerBaseService.queryTotal(map);
		
		PageUtils pageUtil = new PageUtils(list, total, limit, page);
		
		return R.ok().put("page", pageUtil);
	}
	
	/**
	 * 客户列表
	 */
	@RequestMapping("/select")
	@RequiresPermissions("crm:customer:select")
	public R select(){
		//查询列表数据
		List<CustomerBase> list = customerBaseService.queryList(new HashMap<String, Object>());
		
		return R.ok().put("list", list);
	}
	
	/**
	 * 客户信息
	 */
	@RequestMapping("/info/{customerId}")
	@RequiresPermissions("crm:customer:info")
	public R info(@PathVariable("customerId") Long customerId){
		CustomerBase customerBase = customerBaseService.queryObject(customerId);
		return R.ok().put("customerBase", customerBase);
	}
	
	/**
	 * 保存客户
	 */
	@RequestMapping("/save")
	@RequiresPermissions("crm:customer:save")
	public R save(@RequestBody CustomerBase customerBase){
		if(StringUtils.isBlank(customerBase.getCustName())){
			return R.error("角色名称不能为空");
		}
		
		customerBaseService.save(customerBase);
		
		return R.ok();
	}
	
	/**
	 * 修改客户
	 */
	@RequestMapping("/update")
	@RequiresPermissions("crm:customer:update")
	public R update(@RequestBody CustomerBase customerBase){
		if(StringUtils.isBlank(customerBase.getCustName())){
			return R.error("角色名称不能为空");
		}
		
		customerBaseService.update(customerBase);
		
		return R.ok();
	}
	
	/**
	 * 删除客户
	 */
	@RequestMapping("/delete")
	@RequiresPermissions("sys:customer:delete")
	public R delete(@RequestBody Long[] customerBaseIds){
		customerBaseService.deleteBatch(customerBaseIds);
		
		return R.ok();
	}
}
